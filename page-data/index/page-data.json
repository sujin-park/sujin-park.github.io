{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Archived by Sujin","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"1장 중심와 시선 당신의 비즈니스 모델이 성공하려면 당신의 아이디어를 사용자의 두뇌를 자극하는 신호로 바꿔야 한다. 아무리 중요한 밈이라도 인간의 해부학적 한계를 고려하여 디자인되지 않으면 사용자에게 인식되지 못하는 결과가 벌어지게 된다. 우리 눈의 주변시에만 잡힌다면 색상을 인지할 수도, 글자를 읽을 수도 없다. 중심와 시선의 초점 범위가 너무 좁아서 …","fields":{"slug":"/user-experience/ux-psychology-attention/"},"frontmatter":{"date":"March 30, 2022","title":"[UX 심리학] 주의 병목 구간","category":"user-experience","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 10장 - 클래스 😃 책에서 기억하고 싶은 내용을 써보세요. 클래스 체계 클래스를 정의하는 표준 자바 관례에 따르면, 추상화 단계가 순차적으로 내려가 아래 순서로 나온다. 프로그램은 신문 기사처럼 읽힌다. 변수 목록 정적 공개 상수가 있다면 정적 공개 상수 정적 비공개 변수 비공개 인스턴스 변수 공개 함수 비공개 함수는 자신을 호출…","fields":{"slug":"/book-club/clean-code-day20/"},"frontmatter":{"date":"February 10, 2022","title":"CleanCode(클린코드) - 10장. 클래스","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 9장 - 단위테스트 😃 책에서 기억하고 싶은 내용을 써보세요. TDD 법칙 세 가지 실패하는 단위 테스트를 작성할 때까지 실제 코드를 작성하지 않는다. 컴파일은 실패하지 않으면서 실행이 실패하는 정도로만 단위 테스트를 작성한다. 현재 실패하는 테스트를 통과할 정도로만 실제 코드를 작성한다. 위 세 가지 규칙을 따르면 실제 코드를 사…","fields":{"slug":"/book-club/clean-code-day17/"},"frontmatter":{"date":"February 07, 2022","title":"CleanCode(클린코드) - 9장. 단위테스트","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 7장 - 오류 처리 (day13, 15) 😃 책에서 기억하고 싶은 내용을 써보세요. 오류 코드보다 예외를 사용하라 오류가 발생하면 예외를 던지는 편이 낫다. 그러면 호출자 코드가 더 깔끔해진다. 논리가 오류 처리 코드와 뒤섞이지 않으니까. (p.131) Try-Catch-Finally 문부터 작성하라 예외가 발생할 코드를 짤 때는 …","fields":{"slug":"/book-club/clean-code-day15/"},"frontmatter":{"date":"February 04, 2022","title":"CleanCode(클린코드) - 7장. 오류 처리","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 6장 - 객체와 자료 구조 😃 책에서 기억하고 싶은 내용을 써보세요. 자료 추상화 자료를 세세하게 공개하기보다는 추상적인 개념으로 표현하는 것이 좋다. 인터페이스나 조회/설정 함수만으로 추상화가 이뤄지지 않는다. 아무 생각 없이 조회/설정 함수를 추가하는 방법이 가장 나쁘다. 자료/객체 비대칭 복잡한 시스템을 짜다보면 새로운 함수가…","fields":{"slug":"/book-club/clean-code-day12/"},"frontmatter":{"date":"February 01, 2022","title":"CleanCode(클린코드) - 6장. 객체와 자료 구조","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 5장 😃 책에서 기억하고 싶은 내용을 써보세요. 주제 : 프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야 한다. 형식을 맞추는 목적 맨 처음 잡아놓은 구현 스타일과 가독성 수준은 유지보수 용이성과 확장성에 계속 영향을 미친다. 코드 형식은 의사소통의 일환이다. (96p) 원활한 소통을 장려하는 코드 형식은 무엇일까? 적절한 행 길이…","fields":{"slug":"/book-club/clean-code-day10/"},"frontmatter":{"date":"January 30, 2022","title":"CleanCode(클린코드) - 5장. 형식 맞추기","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 4장 😃 책에서 기억하고 싶은 내용을 써보세요. 주석은 오래될수록 코드에서 멀어진다. (p.68) 나라면 코드를 깔끔하게 정리하고 표현력을 강화하는 방향으로, 그래서 애초에 주석이 필요 없는 방향으로 에너지를 쏟겠다. (p.69) 주석은 나쁜 코드를 보완하지 못한다. (p.69) 코드로 의도를 표현하라! (p.70) 좋은 주석 법적…","fields":{"slug":"/book-club/clean-code-day8/"},"frontmatter":{"date":"January 28, 2022","title":"CleanCode(클린코드) - 4장. 주석","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 3장 함수 😃 책에서 기억하고 싶은 내용을 써보세요. 작게 만들어라! 함수를 만드는 첫째 규칙은 작게!다. 함수를 만드는 둘째 규칙은 더 작게!다. (42p) 각 함수가 너무도 명백했다. 각 함수가 이야기 하나를 표현했다. (43p) 블록과 들여쓰기 If 문/else 문/while 문 등에 들어가는 블록은 한 줄이어야 한다. 대개 …","fields":{"slug":"/book-club/clean-code-day6/"},"frontmatter":{"date":"January 26, 2022","title":"CleanCode(클린코드) - 3장. 함수","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 2장 ~ 😃 책에서 기억하고 싶은 내용을 써보세요. 변수(혹은 함수나 클래스)의 존재 이유는? 수행 기능은? 사용 방법은? 따로 주석이 필요하다면 의도를 분명히 드러내지 못했다는 말이다. 의도가 드러나는 이름을 사용하면 코드 이해와 변경이 쉬워진다. (p. 22) 그릇된 단서는 코드 의미를 흐린다. 나름대로 널리 쓰이는 의미가 있는…","fields":{"slug":"/book-club/clean-code-day4/"},"frontmatter":{"date":"January 24, 2022","title":"CleanCode(클린코드) - 2장. 의미 있는 이름","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 1장 ~ 😃 책에서 기억하고 싶은 내용을 써보세요. 깨끗한 코드는 주의 깊게 작성한 코드다. 누군가 시간을 들여 깔끔하고 단정하게 정리한 코드다. (p.12) 중복을 피하라. 한 기능만 수행하라. 제대로 표현하라. 작게 추상화하라. (p.14) 깨끗한 코드는 읽으면서 놀랄 일이 없어야 한다고 워드는 말한다. (p.15) 언어를 단순…","fields":{"slug":"/book-club/clean-code-day3/"},"frontmatter":{"date":"January 23, 2022","title":"CleanCode(클린코드) - 1장. 깨끗한 코드","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 1장 ~ 😃 책에서 기억하고 싶은 내용을 써보세요. 궁극적으로 코드는 요구사항을 표현하는 언어라는 사실을 명심한다. (p.2) 그래도 안 돌아가는 프로그램보다 돌아가는 쓰레기가 좋다고 스스로를 위로한 경험이 있다. 다시 돌아와 나중에 정리하겠다고 다짐했었다. 물론 그때 그 시절 우리는 르블랑의 법칙을 몰랐다. 나중은 결코 오지 않는…","fields":{"slug":"/book-club/clean-code-day2/"},"frontmatter":{"date":"January 22, 2022","title":"CleanCode(클린코드) - 1장. 깨끗한 코드","category":"book-club","draft":false}}},{"node":{"excerpt":"🔖 오늘 읽은 범위 : 추천사 & 들어가면서 😃 책에서 기억하고 싶은 내용을 써보세요. 깨끗한 코드를 작성하는 방법은 배우기 어렵다. 단순히 원칙과 패턴을 안다고 깨끗한 코드가 나오지 않는다. 고생을 해야 한다. 스스로 연습하고 실패도 맛봐야 한다. … 결정을 내리느라 고민하는 모습, 잘못된 결정으로 대가를 치르는 모습도 봐야 한다. 🤔 오늘 읽은 소감은…","fields":{"slug":"/book-club/clean-code-day1/"},"frontmatter":{"date":"January 21, 2022","title":"CleanCode(클린코드) - 들어가면서","category":"book-club","draft":false}}},{"node":{"excerpt":"Git Hooks 란 Git은 특정 이벤트가 발생했을 때 특정 스크립트를 실행할 수 있도록 Hook 이라는 기능을 지원한다. 프로젝트에 커밋을 하거나 푸시하기 전에 린트 또는 테스트를 실행할 수 있고, commit message 작성에 도움을 주는 hook 또한 있다.  Hooks 는 기본적으로 프로젝트의  에 위치한다.  위 예제는 shell scrip…","fields":{"slug":"/web/git-prepare-commit-msg/"},"frontmatter":{"date":"December 19, 2021","title":"[Git] Git hooks를 이용하여 commit message 에 특정 문자 넣기","category":"web","draft":false}}},{"node":{"excerpt":"Git tag Git에서 란 특정 커밋을 태깅하는 것으로 특정 커밋을 가리키는 링크라고 할 수 있다. 커밋은 checkout 하여 작업 내용에 대해 수정할 수 있지만, tag는 수정이 불가능하다. tag는 보통 소프트웨어의 버전을 명시하거나 릴리즈 할 때 사용한다. tag 조회 tag 생성 tag 이름을 설정하여 로컬 저장소에 tag 를 생성한다. 특정 …","fields":{"slug":"/web/git-tag-release-drafter/"},"frontmatter":{"date":"September 04, 2021","title":"[Git] Git tag, Release Drafter로 release note 작성하기","category":"web","draft":false}}},{"node":{"excerpt":"최근에 책에서 “자신을 개선하는 프로세스에 대해 생각해 보라. 나의 작업을 돌아보고 회고/반성하는 활동을 주기적으로 가져야 한다.” 라는 문구를 보았다. 문구를 보니 작성하다 마무리하지 못했던 회고 글이 생각나서 이제는 마무리하고자 한다. 최근 눈과 손목이 아프면서 공부에 많은 시간을 할애하지 못하여 두려움과 부담, 무언가 따라가지 못한다는 느낌을 받았다…","fields":{"slug":"/essay/2020-2021-log/"},"frontmatter":{"date":"August 29, 2021","title":"2020 하반기와 2021 상반기 회고","category":"essay","draft":false}}},{"node":{"excerpt":"보통 유틸성 함수를 만들 때는 테스트 코드를 작성하였지만 컴포넌트 테스트 코드는 작성해본적이 없었다. 작년에 컴포넌트 테스트 코드에 대해서 중요성을 느끼게 해준 FE Conf Korea 2020 - 최수형님의 프론트엔드에서 TDD가 가능하다는 것을 보여드립니다. 라는 강연을 듣고 실행에 옮기려고 할 일에 넣어두었는데 2021년이 되어서야 작성해보게 되었다…","fields":{"slug":"/react/2021-06-15-React-Testing-Library/"},"frontmatter":{"date":"June 15, 2021","title":"React 컴포넌트 테스트 환경 구축하기 (testing-library)","category":"react","draft":false}}},{"node":{"excerpt":"스터디한 강의에서는 use-react-router 라는 third party library 를 사용하는 예시까지만 나왔는데, 이제는 React-Router 에서 제공하는 Hooks 가 있을거라 생각되어 공식 문서를 들어가보았고 Hooks 가 업데이트 된 것을 보았다. useHistory history 객체를 반환해주는 useHistory hooks 를 아…","fields":{"slug":"/react/2021-05-24-React-Router-Hooks/"},"frontmatter":{"date":"May 24, 2021","title":"React-Router에 추가된 Hooks 살펴보기","category":"react","draft":false}}},{"node":{"excerpt":"cherry-pick 은 이다. 사용 예시 작업한 내용을 모두 reset 할 때, 온전히 살리고 싶은 커밋이 있다면 그 커밋들만 cherry-pick 하는 경우 A와 B가 동시에 작업이 진행되고 있을 때, A에 작업된 특정 커밋이 B에도 필요한 것처럼 코드 의존성이 있는 경우 위 예시들은 rebase 로도 가능하지만 두번째 예시와 같이 다른 브랜치에 있는…","fields":{"slug":"/web/2021-03-15-git-cherry-pick/"},"frontmatter":{"date":"March 15, 2021","title":"[Git] cherry-pick","category":"web","draft":false}}},{"node":{"excerpt":"컴포넌트 아키텍쳐 컴포넌트가 비즈니스 로직과 관계성을 가지고 있는지 없는지에 따라서 presentational component, container component 로 구분지을 수 있다. 외부와 관계가 있다면 container component, 단순하게 props 을 받아서 보여주기만 한다면 presentational component가 될 수 있다.…","fields":{"slug":"/study/2020-09-30-React-TypeScript7/"},"frontmatter":{"date":"September 30, 2020","title":"[우아한테크러닝] React & TypeScript 3기 - 7회차","category":"study","draft":false}}},{"node":{"excerpt":"컴포넌트 설계 렌더링 관련된 코드가 길어지면 가독성이 좋지 않고 확장성이 떨어지기 때문에 컴포넌트를 분리하는 것이 좋다.\n아키텍쳐의 중요한 요소는 네이밍과 컴포넌트를 분리하는 것. 컴포넌트를 분리 전 컴포넌트 분리 후 SessionItem 이라는 컴포넌트를 생성하고 title 을 props 으로 받아서 렌더링을 해주면 list 와 item 이 분리가 될 …","fields":{"slug":"/study/2020-09-28-React-TypeScript6/"},"frontmatter":{"date":"September 28, 2020","title":"[우아한테크러닝] React & TypeScript 3기 - 6회차","category":"study","draft":false}}},{"node":{"excerpt":"컴포넌트 설계 렌더링 관련된 코드가 길어지면 가독성이 좋지 않고 확장성이 떨어지기 때문에 컴포넌트를 분리하는 것이 좋다.\n아키텍쳐의 중요한 요소는 네이밍과 컴포넌트를 분리하는 것. 컴포넌트를 분리 전 컴포넌트 분리 후 SessionItem 이라는 컴포넌트를 생성하고 title 을 props 으로 받아서 렌더링을 해주면 list 와 item 이 분리가 될 …","fields":{"slug":"/study/2020-09-12-React-TypeScript4/"},"frontmatter":{"date":"September 13, 2020","title":"[우아한테크러닝] React & TypeScript 3기 - 4회차","category":"study","draft":false}}},{"node":{"excerpt":"3회차는 React 의 기본적인 내용과 간단하게 구현해보는 것에 중점을 둔 강의였다. 기술을 단순하게 사용만 해보는 것이 아니라 직접 구현을 해보면서 어떻게 동작 & 구현되어있는지를 보고, 기술을 습득해야한다. 단순한 사용자로만 남으면 10년 뒤에 사람이 달라진다라는 강사님의 명언으로 시작 된 3번째 강의 내용이다. React 만들어보기 React.js …","fields":{"slug":"/study/2020-09-12-React-TypeScript3/"},"frontmatter":{"date":"September 13, 2020","title":"[우아한테크러닝] React & TypeScript 3기 - 3회차","category":"study","draft":false}}},{"node":{"excerpt":"TypeScript로 Type 체크만 하는 정도로 써보고 깊게 사용해보지 못했는데,\nTypeScript와 React 기반으로 컴포넌트, 아키텍쳐 설계를 함께 학습할 수 있는 기회가 생겼다.\n항상 혼자보는 목적으로 기록을 해왔는데 이번엔 블로그에도 올려보자는 생각으로 좀 더 열심히 기록을 하기로 했다. 여러분들의 고민 나는 잘 하고 있나 ? 네트워킹 희망 …","fields":{"slug":"/study/2020-09-02-React-TypeScript/"},"frontmatter":{"date":"September 02, 2020","title":"[우아한테크러닝] React & TypeScript 3기 - 1회차","category":"study","draft":false}}},{"node":{"excerpt":"Number Number는 문자열을 인자로 받으면 해당 문자열을 숫자로 변환해준다. 아래의 코드는 ‘10000’ 라는 문자열을 10000이라는 숫자로 형변환하여 변수 num에 담는 코드이다. 하지만 아래처럼 문자열이 숫자가 아닌 경우 num에는 NaN이 저장된다. parseInt 기본적으로 Number(str)와 동일하게 문자열을 인자로 받으면 해당 문자…","fields":{"slug":"/javascript/2020-08-16-Number-parseInt/"},"frontmatter":{"date":"August 16, 2020","title":"Number와 parseInt 의 차이","category":"javascript","draft":false}}},{"node":{"excerpt":"최근에 Vue.js 에서 드래그앤드롭 기능을 구현 할 일이 있어서 이런 저런 library 를 찾아보다가 몇가지 보게 되었다. 간단하게 정리해둔 내용에 대해서 공유를 하면 좋을 것 같아서 블로그에 올리게 되었다. Vue.Draggable https://www.npmjs.com/package/vuedraggable 우선 드래그앤드롭을 구현할 때 가장 먼저 …","fields":{"slug":"/vue/2020-08-05-Vue-drag-library/"},"frontmatter":{"date":"August 05, 2020","title":"Vue Drag & Drop 구현할 기능에 적절한 library 사용하기","category":"vue","draft":false}}},{"node":{"excerpt":"CSS 전처리기 (CSS Preprocessor) - SASS CSS 전처리기(CSS Preprocessor)는 모듈별로 특별한 Syntax를 가지고 있다. 믹스인(mixin), 중첩 셀렉터(nesting selector), 상속 셀렉터(inheritance selector) 등을 통해 CSS를 DRY 방식으로 구조적으로 작업할 수 있게 해준다. 이 CS…","fields":{"slug":"/web/2020-07-23-CSS-Preprocessor-SASS/"},"frontmatter":{"date":"July 23, 2020","title":"CSS 전처리기 (CSS Preprocessor) - SASS","category":"web","draft":false}}},{"node":{"excerpt":"이전보다 개인적으로 공부 할 시간이 남게 되어서 이전에 스터디 참여했던 Code spitz 85 Non blocking Javascript 를 복습하려고 한다.\n당시에 회사 다니면서 어렵게 참여해서 들었던 시간을 헛되게 넘기고 싶지 않아서 이번에 복습을 제대로 해봐야겠다. 2강부터 다시 복습하게 된 이유는…가장 열심히 들었고 이 수업 중 가장 많이 이해했…","fields":{"slug":"/javascript/2020-07-14-Non-blocking-javascript2/"},"frontmatter":{"date":"July 14, 2020","title":"Code spitz 85 [Non blocking Javascript] - 2강","category":"javascript","draft":false}}},{"node":{"excerpt":"이전에 자바스크립트 스코프와 호이스팅에 대해서 다시 공부를 하고 포스팅을 했다. 기본기, 내구성을 다지고자 자바스크립트 공부를 기초부터 전체적으로 공부를 하고 있는데 이번에는 그 중 가장 기초가 되는 타입과 값에 대해서 포스팅을 하려고 한다. 타입 이란 자바스크립트 엔진, 개발자가 어떤 값을 다른 값과 분별할 수 있게 해주는 고유한 특성이다. 데이터 타입…","fields":{"slug":"/javascript/2020-06-16-javascript-type-value/"},"frontmatter":{"date":"June 16, 2020","title":"타입과 값","category":"javascript","draft":false}}},{"node":{"excerpt":"호이스팅이란 변수의 선언문을 유효범위의 최상단으로 끌어올리는 행위이다. 함수 실행 전 해당 함수를 한 번 훑는다. 함수 내에 존재하는 변수/함수선언에 대한 정보를 기억 후 실행. 실제로 코드가 끌어올려지는 건 아니며, 자바스크립트 Parser 내부적으로 끌어올려서 처리하는 것이다. 실제 메모리에서는 변화가 없다. var로 선언된 선언문과 함수 선언문만 가…","fields":{"slug":"/javascript/2020-05-23-Javascript-hoisting/"},"frontmatter":{"date":"May 23, 2020","title":"호이스팅 (Hoisting)","category":"javascript","draft":false}}},{"node":{"excerpt":"scope란 변수의 유효 범위 또는 코드가 유효한 범위라고 할 수 있다. 컴파일러가 생성한 코드를 실행할 때, 엔진은 변수 a가 생성된 적 있는지 스코프에서 검색한다. 지역변수 함수내에 정의된 지역변수는 지역 범위를 가지며, 해당 함수와 내부 함수에서만 접근이 가능하다.\n만약 같은 이름의 전역변수와 지역변수가 존재 할 경우, 지역변수가 우선순위가 높다. …","fields":{"slug":"/javascript/2020-05-18-Javascript-scope/"},"frontmatter":{"date":"May 18, 2020","title":"Scope","category":"javascript","draft":false}}},{"node":{"excerpt":"Mirage JS 소개 Vue.js 에서 Mirage JS 로 API Mocking  당장 호출 가능한 API가 없어도 Javascript application 을 빌드, 테스트 할 수 있는 API Mocking 라이브러리다. 프론트엔드 웹 애플리케이션을 개발 할 때 API 개발 일정과 프론트엔드 일정이 동시에 진행 될 때도 있고, API 구현 전 설계 …","fields":{"slug":"/vue/2020-05-13-Mirage-vue-app/"},"frontmatter":{"date":"May 13, 2020","title":"API Mocking Library - Mirage 설정하기 (Vue.js)","category":"vue","draft":false}}},{"node":{"excerpt":"Kakao FE meetup 에 다녀오고 글을 정리해둔지는 꽤 되었는데 이제서야 포스팅을 하게 되었다.\n그 때 얻었던 인사이트를 지금까지 적용해본게 있는지 되돌아 보고자 재정리 + 포스팅을 하기로 결심했다. 얼른 생활적 거리두기도 끝나고 모든게 괜찮아져서 세미나를 다시 갈 수 있는 날이 오길. 글로 보는 것과 세미나에서 직접 듣고 질의응답에 참여하는건 정…","fields":{"slug":"/conference/2020-05-05-Kakao-meetup/"},"frontmatter":{"date":"May 05, 2020","title":"Kakao FE(Front end) meetup, 1st 후기","category":"conference","draft":false}}},{"node":{"excerpt":"특정 데이터가 Serialize 되지 않을 때 Kotlin 과 JPA로 개발을 하다가 특정 데이터를 특정 값으로 아무리 insert해도 값이 변하지 않고 초기 값으로 저장되는 것을 확인했다. 문제를 해결하려 계속 이것저것 설정을 바꿔보던 와중에 알게 되었다. 자꾸 값이 저장되지 않고 문제가 생기던 부분 어떤 부분이 잘못된지 모르고 계속 다른 설정만 변경해…","fields":{"slug":"/web/2018-07-30-Kotlin-Serialize/"},"frontmatter":{"date":"July 30, 2018","title":"특정 데이터가 Serialize 되지 않을 때","category":"web","draft":false}}},{"node":{"excerpt":"2018년 3월 17일에 네번째 주최하는 Oracle MeetUp에 참여했다.\n3번째 MeetUp에도 참여했었는데 이번에 밋업에 참여한 인원이 훨~씬 많아서\n깜짝놀랬다.  JAVA 와 OpenJDK Java는 개방형이다. java is a blue colour language. It’s not PhD thesis material but a language…","fields":{"slug":"/conference/2018-03-25-Oracle-Meetup/"},"frontmatter":{"date":"March 25, 2018","title":"미래의 Java와 손에 잡히는 Microservice - Oracle Meetup 4th!","category":"conference","draft":false}}},{"node":{"excerpt":"강연 시작하기 전에 amazongo에 대해서 영상을 보았는데, 다 보고나니 시애틀에 가면 꼭 한번 가고싶다는 생각이 들었다. amazongo 영상 Session 진행 순서 Cloud Computing이란 Why AWS ? AWS 서비스 소개 AWS 고객 사례 1. Cloud Computing이란 IT resource와 애플리케이션을 언제든지 사용 가능 불…","fields":{"slug":"/conference/2018-03-20-AWS101-seminar/"},"frontmatter":{"date":"March 20, 2018","title":"AWS와 함께하는 클라우드 컴퓨팅","category":"conference","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","521680639"]}