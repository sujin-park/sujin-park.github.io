{"componentChunkName":"component---src-templates-blog-post-js","path":"/web/2021-03-15-git-cherry-pick/","result":{"data":{"site":{"siteMetadata":{"title":"Archived by Sujin","author":"sujin-park","siteUrl":"https://sujin-park.github.io","comment":{"disqusShortName":"","utterances":"sujin-park/sujin-park.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"1e8abb0b-5c06-56f2-a204-617421c3c5c7","excerpt":"cherry-pick 은 이다. 사용 예시 작업한 내용을 모두 reset 할 때, 온전히 살리고 싶은 커밋이 있다면 그 커밋들만 cherry-pick 하는 경우 A와 B가 동시에 작업이 진행되고 있을 때, A에 작업된 특정 커밋이 B에도 필요한 것처럼 코드 의존성이 있는 경우 위 예시들은 rebase 로도 가능하지만 두번째 예시와 같이 다른 브랜치에 있는 커밋을 현 브랜치에 가져오는 경우는 그 브랜치를 현 브랜치에 merge 후 rebase 해야하므로 번거롭다. cherry-pick…","html":"<p><strong>cherry-pick</strong> 은 <code class=\"language-text\">다른 브랜치에 있는 커밋을 현재 작업하고 있는 브랜치에 적용시킬 수 있는 명령어</code>이다.</p>\n<p><strong>사용 예시</strong></p>\n<ul>\n<li>작업한 내용을 모두 reset 할 때, 온전히 살리고 싶은 커밋이 있다면 그 커밋들만 cherry-pick 하는 경우</li>\n<li>A와 B가 동시에 작업이 진행되고 있을 때, A에 작업된 특정 커밋이 B에도 필요한 것처럼 코드 의존성이 있는 경우</li>\n</ul>\n<p>위 예시들은 rebase 로도 가능하지만 두번째 예시와 같이 다른 브랜치에 있는 커밋을 현 브랜치에 가져오는 경우는 그 브랜치를 현 브랜치에 merge 후 rebase 해야하므로 번거롭다.</p>\n<h3 id=\"cherry-pick-사용-방법\" style=\"position:relative;\"><a href=\"#cherry-pick-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"cherry pick 사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cherry-pick 사용 방법</h3>\n<hr>\n<p><strong>git cherry-pick</strong> 명령어는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">git cherry<span class=\"token operator\">-</span>pick <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>commit-hash</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>commit-hash</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> ... </span></code></pre></div>\n<p>cherry-pick 을 공부하기 위해 아래의 커밋 트리를 예로 들어보려고 한다.</p>\n<img width=\"666\" alt=\"_2021-03-13__9 46 56\" src=\"https://user-images.githubusercontent.com/29244798/111155512-e1f00b00-85d7-11eb-9d6a-c0eb22bab6de.png\">\n<p>현재 feature/B 브랜치에 checkout 되어 있고, 브랜치 feature/A 브랜치의 커밋 중 <strong>a0b3bb56</strong> 과 <strong>a97320f0</strong> 를 현재 브랜치인 feature/B 에 적용하려고 한다.</p>\n<p>cherry-pick 을 이용하여 feature/A 에 있는 커밋을 feature/B 브랜치에 적용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">current branch -<span class=\"token operator\">></span> feature/B\n<span class=\"token function\">git</span> cherry-pick a0b3bb56</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">current branch -<span class=\"token operator\">></span> feature/B\n<span class=\"token function\">git</span> cherry-pick a97320f0</code></pre></div>\n<p>또는 한번의 명령어로 여러 개의 커밋을 가져와 적용하고 싶을 때는 아래와 같이 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick a0b3bb56 a97320f0</code></pre></div>\n<p>위와 같이 cherry-pick 을 사용하여 feature/A 브랜치에 있는 커밋을 feature/B 브랜치에 적용하면 feature/A, feature/B 브랜치의 커밋 트리는 아래처럼 변경된다.</p>\n<img width=\"672\" alt=\"스크린샷 2021-03-13 오전 9 48 45\" src=\"https://user-images.githubusercontent.com/29244798/111155403-c422a600-85d7-11eb-922a-ec9c987d9c6f.png\">\n<h3 id=\"cherry-pick-할-때-conflict-가-발생한다면\" style=\"position:relative;\"><a href=\"#cherry-pick-%ED%95%A0-%EB%95%8C-conflict-%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%9C%EB%8B%A4%EB%A9%B4\" aria-label=\"cherry pick 할 때 conflict 가 발생한다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cherry-pick 할 때 conflict 가 발생한다면,</h3>\n<hr>\n<p>cherry-pick 하려는 커밋과 내 브랜치의 내용과 conflict 가 발생한다면 아래와 같이 2개의 옵션이 있다.</p>\n<p><strong>conflict 를 해결하고 cherry-pick 을 이어서 진행한다.</strong></p>\n<ul>\n<li>conflict 를 해결한다.</li>\n<li><code class=\"language-text\">git add</code> 명령어로 conflict 를 해결하기 위해 수정된 코드를 stage 로 올린다.</li>\n<li><code class=\"language-text\">git cherry-pick --continue</code> 명령어로 cherry-pick 을 이어서 진행한다.</li>\n</ul>\n<p><strong>cherry-pick 을 중단하고 cherry-pick 을 하기 전으로 돌아간다.</strong></p>\n<ul>\n<li><code class=\"language-text\">git cherry-pick --abort</code> 명령어를 사용한다.</li>\n</ul>\n<p><strong>참고 링크</strong></p>\n<ul>\n<li><a href=\"https://imasoftwareengineer.tistory.com/7\">https://imasoftwareengineer.tistory.com/7</a></li>\n<li><a href=\"https://medium.com/react-native-seoul/git-cherry-pick-%EC%82%AC%EC%9A%A9%EB%B2%95-fe1a3346bd27\">https://medium.com/react-native-seoul/git-cherry-pick-사용법-fe1a3346bd27</a></li>\n</ul>","frontmatter":{"title":"[Git] cherry-pick","date":"March 15, 2021"}}},"pageContext":{"slug":"/web/2021-03-15-git-cherry-pick/","previous":{"fields":{"slug":"/study/2020-09-30-React-TypeScript7/"},"frontmatter":{"title":"[우아한테크러닝] React & TypeScript 3기 - 7회차","category":"study","draft":false}},"next":{"fields":{"slug":"/react/2021-05-24-React-Router-Hooks/"},"frontmatter":{"title":"React-Router에 추가된 Hooks 살펴보기","category":"react","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}